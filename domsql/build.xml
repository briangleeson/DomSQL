<!-- ********************************************************************** -->
<!--																		-->
<!-- Â© Copyright IBM Corp. 2014												-->
<!-- 																		-->
<!-- Licensed under the Apache License, Version 2.0 (the "License"); 		-->
<!-- you may not use this file except in compliance with the License. 		-->
<!-- You may obtain a copy of the License at:								-->
<!-- 																		-->
<!-- http://www.apache.org/licenses/LICENSE-2.0 							-->
<!-- 																		-->
<!-- Unless required by applicable law or agreed to in writing, software 	-->
<!-- distributed under the License is distributed on an "AS IS" BASIS,		--> 
<!-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or 		-->
<!-- implied. See the License for the specific language governing			--> 
<!-- permissions and limitations under the License.							-->
<!--																		-->
<!-- ********************************************************************** -->

<!-- This build script has been copied from the ExtLib -->
<!-- It is not yet complete, but will be updated in future -->
<!-- in order to facilitate easily building the release zip -->
<project name="DomSQL" default="build.release" basedir=".">
	<!-- <import file="${env.WPLC_IMPORT}/signupdatesite.xml" /> -->
	<!-- <import file="${env.WPLC_IMPORT}/site_xml_validator2.xml" /> -->
	<!-- <taskdef name="generateSiteXml" classname="com.ibm.ws.build.tasks.plugins.kitting.GenerateSiteXML" /> -->
	
	<property name="skip.validate.site" value="true"/>
	<property name="dir.plugins" value="${basedir}/eclipse/plugins"/>
	<property name="dir.features" value="${basedir}/eclipse/features"/>
	<property name="dir.release.output" value="${basedir}/release"/>
	<property name="dir.doc" value="${basedir}/doc"/>
	<property name="dir.resources" value="${basedir}/resources"/>
	<property name="dir.update.xpages" value="${basedir}/updateSite-xpages"/>
	<property name="dir.update.dots" value="${basedir}/updateSite-dots"/>
	<property name="dir.temp" value="${basedir}/temp"/>
	<property name="dir.src.native.root" value="${basedir}/native/"/>
	<property name="dir.src.java.root" value="${basedir}/eclipse/"/>
	<property name="release.version" value="1.0.0"/>
	
	<target name="build.src.c.zip">		
		<!-- Generate the src-c.zip file -->
		<zip destfile="${dir.temp}/src-c.zip">
			<zipfileset dir="${dir.src.native.root}" prefix="native" />
		</zip>
	</target>
	
	<target name="build.src.java.zip">		
		<!-- Generate the src-java.zip file -->
		<zip destfile="${dir.temp}/src-java.zip">
			<zipfileset dir="${dir.src.java.root}" prefix="eclipse" excludes="**/bin/**" />
		</zip>
	</target>
	
	<target name="build.update.xpages.zip">
		<property name="dir.update.xpages.temp" value="${dir.temp}/updateSite-xpages" />
		<mkdir dir="${dir.update.xpages.temp}" />
		<mkdir dir="${dir.update.xpages.temp}/features" />
		<mkdir dir="${dir.update.xpages.temp}/plugins" />
		<!-- Copy the plugins and features jars -->
		<!-- Could be replaced with script to jar plugins and then jar features -->
		<copy todir="${dir.update.xpages.temp}/plugins">
			<fileset dir="${dir.update.xpages}/plugins" includes="*.jar"/>
		</copy>
		<copy todir="${dir.update.xpages.temp}/features">
			<fileset dir="${dir.update.xpages}/features" includes="*.jar"/>
		</copy>
		<copy file="${dir.update.xpages}/site.xml" todir="${dir.update.xpages.temp}">
		</copy>
		<!-- <generateSiteXml siteroot="${dir.update.xpages.temp}" category="OpenNTF Builds" categoryDesc="XPages DomSQL Update Site" /> -->

		<!-- Validate the update site
        <if>
			<not>
	            <equals arg1="${skip.validate.site}" arg2="true"/>
			</not>
            <then>
				<antcall target="validate.update.site">
					<param name="update.site.source" value="${dir.update.xpages}" />
		-->			<!-- Don't recurse dependencies looking for things like Eclipse on this site. -->
		<!-- 			<param name="featuresOnly" value="true" />
				</antcall>
			</then>
		</if> -->
		
		<!-- Generate the zip file -->
		<zip destfile="${dir.temp}/updateSite-xpages.zip">
			<zipfileset dir="${dir.update.xpages.temp}" prefix="updateSite-xpages" />
		</zip>

		<delete dir="${dir.update.xpages.temp}" />
	</target>
	
	<target name="build.update.dots.zip">
		<property name="dir.update.dots.temp" value="${dir.temp}/updateSite-dots" />
		<mkdir dir="${dir.update.dots.temp}" />
		<mkdir dir="${dir.update.dots.temp}/features" />
		<mkdir dir="${dir.update.dots.temp}/plugins" />
		<!-- Copy the plugins and features jars -->
		<!-- Could be replaced with script to jar plugins and then jar features -->
		<copy todir="${dir.update.dots.temp}/plugins">
			<fileset dir="${dir.update.dots}/plugins" includes="*.jar"/>
		</copy>
		<copy todir="${dir.update.dots.temp}/features">
			<fileset dir="${dir.update.dots}/features" includes="*.jar"/>
		</copy>
		<copy file="${dir.update.dots}/site.xml" todir="${dir.update.dots.temp}">
		</copy>
		<!-- <generateSiteXml siteroot="${dir.update.dots.temp}" category="OpenNTF Builds" categoryDesc="XPages DomSQL Update Site" /> -->

		<!-- Validate the update site
        <if>
			<not>
	            <equals arg1="${skip.validate.site}" arg2="true"/>
			</not>
            <then>
				<antcall target="validate.update.site">
					<param name="update.site.source" value="${dir.update.dots}" />
		-->			<!-- Don't recurse dependencies looking for things like Eclipse on this site.  -->
		<!-- 			<param name="featuresOnly" value="true" />
				</antcall>
			</then>
		</if> -->
		
		<!-- Generate the zip file -->
		<zip destfile="${dir.temp}/updateSite-dots.zip">
			<zipfileset dir="${dir.update.dots.temp}" prefix="updateSite-dots" />
		</zip>

		<delete dir="${dir.update.dots.temp}" />
	</target>

	<target name="build.release">
		<!-- Remove old zip -->
		<delete>
			<fileset dir="${dir.release.output}" includes="*.zip" />
		</delete>
		
		<!-- Build updateSite and src zip files -->
		<mkdir dir="${basedir}/release" />
		<antcall target="build.update.xpages.zip" />
		<antcall target="build.update.dots.zip" />
		<antcall target="build.src.java.zip" />
		<antcall target="build.src.c.zip" />
		
		<!-- Copy necessary files to the temp folder -->
		<copy todir="${dir.temp}">
		    <fileset dir="${dir.resources}" includes="*" />
		    <fileset dir="${dir.doc}" includes="*.*" />
		</copy>

		<!-- Generate the filename of the release zip -->
    	<tstamp>
    		<format property="date.stamp" pattern="yyyyMMdd" locale="en,GB"/>
    	</tstamp>
		<property name="release.filename" value="JDBCAccessForIBMDomino${date.stamp}"/>
				
		<!-- Generate the zip file -->
		<zip destfile="${dir.release.output}/${release.filename}.zip">
			<zipfileset dir="${dir.temp}" />
		</zip>
		
		<!-- Clean up - Discard temp folder -->
		<delete dir="${dir.temp}" />
	</target>
</project>
